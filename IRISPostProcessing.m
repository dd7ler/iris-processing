%%
% This is the post-processing for the data, after it has been generated by
% the drymonocol into the appropriate format 

finishedAdding = 0
intakeBlocks = {}

%This while loop permits for the loading of multiple files into the
%post-analyzing script use annulusdiff as needed
while finishedAdding == 0
   filename = uigetfile
   load(filename);
   intakeBlocks = cat(2, intakeBlocks, results.height.cornerdiff);      
   prompt = 'Are you done adding blocks to analyze? Please enter "1" if so, and "0" otherwise   ';
   finishedAdding = input(prompt);  
end


%For varying block sizes, number of blocks etc.
prompt = 'What is the number of rows in your blocks?     ';
numberofRows = input(prompt);
prompt = 'What is the number of columns in the your blocks?   ';
numberofColumns = input(prompt);
prompt = 'How MANY BLOCKS IN TOTAL do you want to analyze?   ';     
numberofBlocks = input(prompt);


%Calculates the delta-height for the combos belows (Replace cornerdiff with
%annulus diff whenever needed)
for n = 1:numberofBlocks
    antigenBlocking(:,:,n) = intakeBlocks{1,n}(:,:,3) - intakeBlocks{1,n}(:,:,2);
    antigenCapture(:,:,n) = intakeBlocks{1,n}(:,:,3) - intakeBlocks{1,n}(:,:,1);
    blockingCapture(:,:,n) = intakeBlocks{1,n}(:,:,2) - intakeBlocks{1,n}(:,:,1);
end


% This while loop is for flow controlling, and partitions the values you
% want for plotting into the boxplot
done = 0;
allLabels = {};
ABdata = [];
ACdata = [];
BCdata = [];
boxTag = [];
selectionTracker = [];
boxTracker = 0;

while done == 0;
    
    boxTracker = boxTracker + 1;
    prompt = 'In which block are your spots located? (Numbering is left to right horizontally first, and then moving downwards)   ';
    blockNum = input(prompt);
    prompt = 'Which row does the zone containing your spots of interest start? (inclusive)   ';
    rowStart = input(prompt);
    prompt = 'Which row does the zone containing your spots of interest end? (inclusive)   ';
    rowEnd = input(prompt);
    prompt = 'Which column does the zone containing your spots of interest start? (inclusive)   ';
    columnStart = input(prompt);
    prompt = 'Which column does the zone containing your spots of interest end? (inclusive)   ';
    columnEnd = input(prompt);
    
    %Logs the first selection to the selection tracker
    selectionTracker = cat(1, selectionTracker, [blockNum, rowStart, rowEnd, columnStart, columnEnd, boxTracker]);
       
    %Fetches the data from the zones designated by the user from the
    %difference matrices
    zoneAntigenBlocking = antigenBlocking(rowStart:rowEnd, columnStart:columnEnd, blockNum);
    zoneAntigenCapture = antigenCapture(rowStart:rowEnd, columnStart:columnEnd, blockNum);
    zoneBlockingCapture = blockingCapture(rowStart:rowEnd, columnStart:columnEnd, blockNum);
    
    prompt = 'Would you like to SPREAD the zone you have just defined to other blocks? "1" if so, "0" if not   ';
    spreadInitial = input(prompt);
    
    while spreadInitial == 1
        
        prompt = ' To which other block would you like to spread your zone to? ';
        blockNum = input(prompt);
        
        extraSpotsAB = antigenBlocking(rowStart:rowEnd, columnStart:columnEnd, blockNum);
        extraSpotsAC = antigenCapture(rowStart:rowEnd, columnStart:columnEnd, blockNum);
        extraSpotsBC = blockingCapture(rowStart:rowEnd, columnStart:columnEnd, blockNum);
        zoneAntigenBlocking = reshape(zoneAntigenBlocking, [], 1);
        zoneAntigenBlocking = cat(1, zoneAntigenBlocking , reshape(extraSpotsAB, [], 1));
        zoneAntigenCapture = reshape(zoneAntigenCapture, [], 1);
        zoneAntigenCapture = cat(1, zoneAntigenCapture, reshape(extraSpotsAC, [], 1));
        zoneBlockingCapture = reshape(zoneBlockingCapture, [], 1);
        zoneBlockingCapture = cat(1, zoneBlockingCapture, reshape(extraSpotsBC, [], 1));
        selectionTracker = cat(1, selectionTracker, [blockNum, rowStart, rowEnd, columnStart, columnEnd, boxTracker]);
        
        prompt = 'Would you like to SPREAD the zone to yet another block? "1" if so, "0" if not   ';
        spreadInitial = input(prompt);
        
    end
    
    %this while loop allows the addition of more points for the dataset
    %within which the boxplot is created
    prompt = 'Would you like to add another zone of selection to THE ZONE you just defined? enter "1" if so, and "0" otherwise   ';
    selectionOver = input(prompt);
    
    while selectionOver ==1;
    
        %Defines the extra spots, and logs them into selectionTracker
        prompt = 'In which block is this EXTRA ZONE located? (Numbering is left to right horizontally first, and then moving downwards)   ';
        blockNum = input(prompt);
        prompt = 'Which row does the zone containing your extra spots of interest start? (inclusive)   ';
        rowStart = input(prompt);
        prompt = 'Which row does the zone containing your extra spots of interest end? (inclusive)   ';
        rowEnd = input(prompt);
        prompt = 'Which column does the zone containing your extra spots of interest start? (inclusive)   ';
        columnStart = input(prompt);
        prompt = 'Which column does the zone containing your extra spots of interest end? (inclusive)   ';
        columnEnd = input(prompt);
        selectionTracker = cat(1, selectionTracker, [blockNum, rowStart, rowEnd, columnStart, columnEnd, boxTracker]);

        
        extraSpotsAB = antigenBlocking(rowStart:rowEnd, columnStart:columnEnd, blockNum);
        extraSpotsAC = antigenCapture(rowStart:rowEnd, columnStart:columnEnd, blockNum);
        extraSpotsBC = blockingCapture(rowStart:rowEnd, columnStart:columnEnd, blockNum);
        zoneAntigenBlocking = reshape(zoneAntigenBlocking, [], 1);
        zoneAntigenBlocking = cat(1, zoneAntigenBlocking , reshape(extraSpotsAB, [], 1));
        zoneAntigenCapture = reshape(zoneAntigenCapture, [], 1);
        zoneAntigenCapture = cat(1, zoneAntigenCapture, reshape(extraSpotsAC, [], 1));
        zoneBlockingCapture = reshape(zoneBlockingCapture, [], 1);
        zoneBlockingCapture = cat(1, zoneBlockingCapture, reshape(extraSpotsBC, [], 1));
        
        prompt = 'Would you like to SPREAD the EXTRA zone you have just defined to other blocks? "1" if so, "0" if not   ';
        spreadExtra = input(prompt);
    
        while spreadExtra == 1

            prompt = 'Which other block would you like to spread your zone to? ';
            blockNum = input(prompt);

            extraSpotsAB = antigenBlocking(rowStart:rowEnd, columnStart:columnEnd, blockNum);
            extraSpotsAC = antigenCapture(rowStart:rowEnd, columnStart:columnEnd, blockNum);
            extraSpotsBC = blockingCapture(rowStart:rowEnd, columnStart:columnEnd, blockNum);
            zoneAntigenBlocking = reshape(zoneAntigenBlocking, [], 1);
            zoneAntigenBlocking = cat(1, zoneAntigenBlocking , reshape(extraSpotsAB, [], 1));
            zoneAntigenCapture = reshape(zoneAntigenCapture, [], 1);
            zoneAntigenCapture = cat(1, zoneAntigenCapture, reshape(extraSpotsAC, [], 1));
            zoneBlockingCapture = reshape(zoneBlockingCapture, [], 1);
            zoneBlockingCapture = cat(1, zoneBlockingCapture, reshape(extraSpotsBC, [], 1));
            selectionTracker = cat(1, selectionTracker, [blockNum, rowStart, rowEnd, columnStart, columnEnd, boxTracker]);

            prompt = 'Would you like to SPREAD the EXTRA zone to yet another block? "1" if so, "0" if not   ';
            spreadExtra = input(prompt);

        end

        prompt = 'Would you like to add yet another EXTRA ZONE to the ones you just defined? enter "1" if so, and "0" otherwise   ';
        selectionOver = input(prompt);  
        
    end
    
    prompt = 'What is the label (name on X-axis) for this box?  ';
    blockLabel = input(prompt, 's');     
    prompt = 'Are you DONE with the ENTIRE PLOT?, enter "1" if done, and "0" otherwise     ';
    done = input(prompt);
    
    %Assigns a group tag to each 'box' of data, so they fall into the
    %correct bins, by using the final size of the zoneAntigenBlocking,
    %which is equal to the two others
    zoneAntigenBlocking = reshape(zoneAntigenBlocking, [], 1);
    temp = [repmat(boxTracker, [size(zoneAntigenBlocking, 1), 1])];
    boxTag = cat(1, boxTag, temp);
        
    %Reshapes the data into columns for convenient plotting, while keeping
    %track of the labels for the boxes
    ABdata = cat(1, ABdata, reshape(zoneAntigenBlocking, [], 1));
    ACdata = cat(1, ACdata, reshape(zoneAntigenCapture, [], 1));
    BCdata = cat(1, BCdata, reshape(zoneBlockingCapture, [], 1));
    allLabels = cat(1, allLabels, blockLabel); 
    

    
end

%%
%Box plots the content of AB(AntigenBlocking), AC (AntigenCapture) and BC
%(BlockingAntigen)

%PLEASE check the value of the selection tracker variable to make sure that
%it is the right selection!!!
figure
boxplot(ABdata, boxTag, 'Labels', allLabels)
xlabel('Sample')
ylabel('Height difference in nanometers')
title('Height differences (nm) for different samples  (Antigen incubation - BSA Blocking)')

figure
boxplot(ACdata, boxTag, 'Labels', allLabels)
xlabel('Sample')
ylabel('Height difference in nanometers')
title('Height differences (nm) for different samples  (Antigen incubation - Capture)')


figure
boxplot(BCdata, boxTag, 'Labels', allLabels)
xlabel('Sample')
ylabel('Height difference in nanometers')
title('Height differences (nm) for different samples (BSA blocking - Capture)')


%%


